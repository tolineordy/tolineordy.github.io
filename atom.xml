<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>时间之塔</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-18T02:22:29.248Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>大阮</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>多个对象调用同一方法</title>
    <link href="http://yoursite.com/2020/04/12/%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E8%B0%83%E7%94%A8%E5%90%8C%E4%B8%80%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/04/12/%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E8%B0%83%E7%94%A8%E5%90%8C%E4%B8%80%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-12T10:28:50.000Z</published>
    <updated>2020-05-18T02:22:29.248Z</updated>
    
    <content type="html"><![CDATA[<p>首先创建构造一个新的构造函数，用于创建一类对象：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Person构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age,gender</span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name=name;</span><br><span class="line"><span class="keyword">this</span>.age=age;</span><br><span class="line"><span class="keyword">this</span>.gender=gender;</span><br><span class="line"><span class="comment">//向对象添加一个方法</span></span><br><span class="line"><span class="keyword">this</span>.sayName=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过构造函数Person创建对象</span></span><br><span class="line"><span class="keyword">var</span>  per1=<span class="keyword">new</span> Person(<span class="string">"RDY"</span>,<span class="number">21</span>,<span class="string">"男"</span>)</span><br><span class="line"><span class="keyword">var</span>  per2=<span class="keyword">new</span> Person(<span class="string">"TOM"</span>,<span class="number">18</span>,<span class="string">"男"</span>)</span><br></pre></td></tr></table></figure><p>以上这种形式，由于是在这个构造函数内部添加的sayName方法,所以构造函数每执行一次就会创建一个新的sayName方法,且每个实例的sayName方法都是唯一的：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">per1.sayName();</span><br><span class="line">per2.sayName();</span><br><span class="line"><span class="built_in">console</span>.log(per1.sayName==per2.sayName);<span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>虽然两个方法都是唯一的，但功能一样而我们只需要一个，因此这是是完全没有必要的。</p><p>然后是第二种方法创建形式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Person构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age, gender</span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"><span class="keyword">this</span>.gender = gender;</span><br><span class="line"><span class="comment">//向对象添加一个方法</span></span><br><span class="line"><span class="keyword">this</span>.sayName = fun;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将sayName方法在全局中定义</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方式是在全局变量中定义，之后调用构造函数创建新的对象，每个对象的sayName方法都是全局作用域中定义的这个方法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过构造函数Person创建对象</span></span><br><span class="line"><span class="keyword">var</span> per1 = <span class="keyword">new</span> Person(<span class="string">"RDY"</span>, <span class="number">21</span>, <span class="string">"男"</span>)</span><br><span class="line"><span class="keyword">var</span> per2 = <span class="keyword">new</span> Person(<span class="string">"TOM"</span>, <span class="number">18</span>, <span class="string">"男"</span>)</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">per1.sayName();</span><br><span class="line">per2.sayName();</span><br><span class="line"><span class="built_in">console</span>.log(per1.sayName==per2.sayName);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>虽然这个方式解决了sayName方法重复创建的问题，但同时也因为将方法定义在全局作用域中而污染了全局作用域的命名空间，若是之后新的函数命名与这个sayName方法重复将直接覆盖这个sayName方法，存在风险。</p><p>因此可以尝试第三种方式，由同一个构造函数创建的对象属于同一类对象，这些对象都带有一个隐含属性 __ proto__  ，其属性值保存着指向同一个原型的地址；即每个对象都有其原型，且同类对象共用一个原型；因此，可以将多个对象重复使用的属性或方法写入原型，既不会重复创建方法，也不会污染命名空间：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建Person构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name, age, gender</span>) </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"><span class="keyword">this</span>.gender = gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//修改sayName方法写法,写入原型</span></span><br><span class="line">Person.prototype.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每创建一个函数，解析器都会向该函数中添加一个属性-prototype，prototype属性对应着一个对象，这个对象就是原型对象，通过prototype属性就能将方法或属性写入原型对象中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过构造函数Person创建对象</span></span><br><span class="line"><span class="keyword">var</span> per1 = <span class="keyword">new</span> Person(<span class="string">"Rdy"</span>, <span class="number">18</span>, <span class="string">"男"</span>);</span><br><span class="line"><span class="keyword">var</span> per2 = <span class="keyword">new</span> Person(<span class="string">"TOM"</span>, <span class="number">20</span>, <span class="string">"男"</span>);</span><br><span class="line"><span class="comment">//调用方法</span></span><br><span class="line">per1.sayName();</span><br><span class="line">per2.sayName();</span><br><span class="line"><span class="built_in">console</span>.log(per1.sayName==per2.sayName);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(per1.__proto__.sayName);<span class="comment">//true,确认此方法写入了原型</span></span><br></pre></td></tr></table></figure><p><img src="/2020/04/12/%E5%A4%9A%E4%B8%AA%E5%AF%B9%E8%B1%A1%E8%B0%83%E7%94%A8%E5%90%8C%E4%B8%80%E6%96%B9%E6%B3%95/1.png" alt="1"></p><p>这时创建的对象由于共用原型对象，而方法写在原型对象中，因此它们访问的是同一个sayName方法，解决了产生的问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先创建构造一个新的构造函数，用于创建一类对象：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
      <category term="面向对象" scheme="http://yoursite.com/tags/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>javascript-if语句</title>
    <link href="http://yoursite.com/2020/04/01/javascript-if%E8%AF%AD%E5%8F%A5/"/>
    <id>http://yoursite.com/2020/04/01/javascript-if%E8%AF%AD%E5%8F%A5/</id>
    <published>2020-04-01T12:26:09.000Z</published>
    <updated>2020-05-18T01:55:04.567Z</updated>
    
    <content type="html"><![CDATA[<p>以下是一个简单的if语句情景应用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当小明成绩为100时，奖励游戏机</span><br><span class="line">当小明成绩为99-85时，奖励玩具车</span><br><span class="line">当小明成绩为84-70时，奖励参考书</span><br><span class="line">当小明成绩为70以下时，奖励大嘴巴子</span><br></pre></td></tr></table></figure><p>首先按需求编写代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> score = +prompt(<span class="string">"请输入学生成绩：（1-100）"</span>);<span class="comment">//文本输入框</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score == <span class="number">100</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励游戏机"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">100</span> &amp;&amp; score &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励玩具车"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">80</span> &amp;&amp; score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励参考书"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">alert(<span class="string">"建议奖励大嘴巴子"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后按照更加严谨的思想，思考当用户输入的数值不符合0-100的要求值，应当增加相应提示：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> score = +prompt(<span class="string">"请输入学生成绩：（1-100）"</span>);<span class="comment">//文本输入框</span></span><br><span class="line"><span class="comment">//增加一个if语句判断输入值是否合法</span></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">100</span> || score &lt; <span class="number">0</span>) &#123;</span><br><span class="line">alert(<span class="string">"输入值不合法"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (score == <span class="number">100</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励游戏机"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">100</span> &amp;&amp; score &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励玩具车"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">80</span> &amp;&amp; score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励参考书"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">alert(<span class="string">"建议奖励大嘴巴子"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进一步考虑，若用户输入的不是数字时而是字符串String时，类型转换为NaN，因此在第一个if条件表达式增加isNaN()进行判断；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var score &#x3D; +prompt(&quot;请输入学生成绩：（1-100）&quot;);&#x2F;&#x2F;文本输入框</span><br><span class="line">&#x2F;&#x2F;判断输入值是否合法</span><br><span class="line">if (score &gt; 100 || score &lt; 0 || isNaN(score)) &#123;</span><br><span class="line">alert(&quot;输入值不合法&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">if (score &#x3D;&#x3D; 100) &#123;</span><br><span class="line">alert(&quot;建议奖励游戏机&quot;);</span><br><span class="line">&#125; else if (score &lt; 100 &amp;&amp; score &gt;&#x3D; 80) &#123;</span><br><span class="line">alert(&quot;建议奖励玩具车&quot;);</span><br><span class="line">&#125; else if (score &lt; 80 &amp;&amp; score &gt;&#x3D; 60) &#123;</span><br><span class="line">alert(&quot;建议奖励参考书&quot;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">alert(&quot;建议奖励大嘴巴子&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更进一步考虑，若用户未输入或输入空格，返回值为flase，转换成Number类型为0；若是想要拦截0，就要将第一个if条件表达式中 score&lt;0 修改为 score&lt;=0 ，或是增加score==false，抑或是将第四种方案改成 score&lt;60&amp;&amp;score&gt;0 ,但这会使得小明考0分时if语句无法正确执行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> score = +prompt(<span class="string">"请输入学生成绩：（1-100）"</span>);<span class="comment">//文本输入框</span></span><br><span class="line"><span class="comment">//判断输入值是否合法</span></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">100</span> || score &lt; <span class="number">0</span> || <span class="built_in">isNaN</span>(score) || score == <span class="literal">false</span>) &#123;</span><br><span class="line">alert(<span class="string">"输入值不合法"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (score == <span class="number">100</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励游戏机"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">100</span> &amp;&amp; score &gt;= <span class="number">80</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励玩具车"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">80</span> &amp;&amp; score &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">alert(<span class="string">"建议奖励参考书"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">alert(<span class="string">"建议奖励大嘴巴子"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此，考虑使用正则表达式限制输入文本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下是一个简单的if语句情景应用：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>css图像精灵</title>
    <link href="http://yoursite.com/2020/04/01/css%E5%9B%BE%E5%83%8F%E7%B2%BE%E7%81%B5/"/>
    <id>http://yoursite.com/2020/04/01/css%E5%9B%BE%E5%83%8F%E7%B2%BE%E7%81%B5/</id>
    <published>2020-04-01T11:56:44.000Z</published>
    <updated>2020-05-18T02:24:05.356Z</updated>
    
    <content type="html"><![CDATA[<p>  在加载网页时，浏览器只会加载当前页面下所需的资源。</p><p>以设置一个按钮为例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.btn</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line">display: block;</span><br><span class="line">width: 30px;</span><br><span class="line">height: 30px;</span><br><span class="line">background-image: url(img/1.png);//加载静态时的图片</span><br><span class="line">background-repeat: no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">background-image: url(img/2.png);//加载光标悬停时的图片</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.btn</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line">background-image: url(img/3.png);//加载激活后的图片</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>按钮处于静态时，按钮样式为背景图片1（浏览器第一次加载）：<br><img src="/2020/04/01/css%E5%9B%BE%E5%83%8F%E7%B2%BE%E7%81%B5/1.png" alt></p><p>移动鼠标至按钮时处于hover状态，样式为背景图片2（浏览器第二次加载）：<br><img src="/2020/04/01/css%E5%9B%BE%E5%83%8F%E7%B2%BE%E7%81%B5/2.png" alt></p><p>按下按钮时处于active状态，样式为背景图片3（浏览器第三次加载）：<br><img src="/2020/04/01/css%E5%9B%BE%E5%83%8F%E7%B2%BE%E7%81%B5/3.png" alt></p><p>  而hover状态下的资源，则会在激活时浏览器再次向后台发出申请后加载，这样不仅浪费了浏览器的缓存能力，再次加载资源所需的时间也将带给用户不好的体验。</p><p>  因此我们可以采用css图像精灵，将所需图片资源进行整合成为一张图：</p><p><img src="/2020/04/01/css%E5%9B%BE%E5%83%8F%E7%B2%BE%E7%81%B5/4.png" alt="4"></p><p>  在需要相应资源时，通过移动图片的方式显示需要的内容；最重要的是加载所有的图片资源只需要向服务器发送一次请求，不仅能充分利用浏览器的缓存能力，还大幅提高了用户体验：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.btn</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line">display: block;</span><br><span class="line">width: 30px;</span><br><span class="line">height: 30px;</span><br><span class="line">background-image: url(img/4.png);//加载雪碧图</span><br><span class="line">background-repeat: no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">background-position: -30px 0px;//移动位置以表现鼠标悬停样式</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.btn</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line">background-position: -60px 0px;//移动位置以表现点击激活样式</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要注意的是，使用雪碧图需要准确计算移动图片位置时的像素值。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  在加载网页时，浏览器只会加载当前页面下所需的资源。&lt;/p&gt;
&lt;p&gt;以设置一个按钮为例：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>html高度塌陷与解决方法</title>
    <link href="http://yoursite.com/2020/04/01/html%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/04/01/html%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-04-01T11:12:34.000Z</published>
    <updated>2020-05-18T01:25:46.959Z</updated>
    
    <content type="html"><![CDATA[<p>  在文档流中，父元素高度会被子元素的高度撑开，但若子元素浮动脱离文档流，就会导致父元素塌陷。</p><p>子元素浮动前：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">border: 10px red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#0000FF</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/04/01/html%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/1.PNG" alt="1"></p><p>子元素浮动后：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">border: 10px red solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#0000FF</span>;</span></span><br><span class="line">float: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/04/01/html%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7%E4%B8%8E%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/2.PNG" alt="2"></p><p>以下记录三种高度塌陷的解决方法，实用性由低到高：<br>方法一：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">border: 10px red solid;</span><br><span class="line"><span class="css"><span class="selector-tag">overflow</span>: <span class="selector-tag">auto</span>;<span class="comment">/* 开启页面隐含属性block formatting context,简称BFC;将元素元素的overflow设置为一个非visitable值 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">zoom</span>: 1;<span class="comment">/* 在IE6中解决此问题:开启隐含属性Has layout,作用与BFC类似 */</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#0000FF</span>;</span></span><br><span class="line">float: left;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">border: 10px red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#0000FF</span>;</span></span><br><span class="line">float: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.clear</span> &#123;</span></span><br><span class="line">clear: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- 在受浮动影响的父元素下添加一个空的子元素div,并开启清除浮动,这是W3C所推荐的方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方法三：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.box1</span> &#123;</span></span><br><span class="line">border: 10px red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.box2</span> &#123;</span></span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#0000FF</span>;</span></span><br><span class="line">float: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="css"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">content: "";</span><br><span class="line">display: block;</span><br><span class="line">clear: both;</span><br><span class="line"><span class="css">&#125;<span class="comment">/* 通过after伪类在元素最后添加一个空白格并转换成块元素，对其进行clear:both清除浮动，可解决高度塌陷且不会在页面中添加多余div */</span></span></span><br><span class="line"><span class="css"><span class="selector-class">.clearfix</span> &#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">zoom</span>: 1;<span class="comment">/* 用于兼容IE6 */</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1 clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  以上方法中，方法二为W3C推荐写法，但方法二会在html页面原有布局中增加一个div，并不一定是最好的解决办法。而方法三完全在css解决，我认为才是最合适的解决办法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  在文档流中，父元素高度会被子元素的高度撑开，但若子元素浮动脱离文档流，就会导致父元素塌陷。&lt;/p&gt;
&lt;p&gt;子元素浮动前：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;spa
      
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>生活</title>
    <link href="http://yoursite.com/2020/03/28/%E7%94%9F%E6%B4%BB/"/>
    <id>http://yoursite.com/2020/03/28/%E7%94%9F%E6%B4%BB/</id>
    <published>2020-03-28T08:31:47.000Z</published>
    <updated>2020-05-18T02:55:59.393Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2020/03/28/%E7%94%9F%E6%B4%BB/200328.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2020/03/28/%E7%94%9F%E6%B4%BB/200328.png&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="生活" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="摄影" scheme="http://yoursite.com/tags/%E6%91%84%E5%BD%B1/"/>
    
      <category term="风景" scheme="http://yoursite.com/tags/%E9%A3%8E%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>学习</title>
    <link href="http://yoursite.com/2020/03/28/%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/03/28/%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-28T07:39:42.000Z</published>
    <updated>2020-03-28T07:41:02.607Z</updated>
    
    <content type="html"><![CDATA[<p>博客的构建基本完成，今后开始不定期写下学习记录。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;博客的构建基本完成，今后开始不定期写下学习记录。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
